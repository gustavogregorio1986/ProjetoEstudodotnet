// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ProjetoEstudo.Infraestrutura.Contexto;

namespace ProjetoEstudo.Infraestrutura.Migrations
{
    [DbContext(typeof(ProjetoEstudoContexto))]
    [Migration("20230629185157_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.13")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("LojaProduto", b =>
                {
                    b.Property<int>("LojasIdLoja")
                        .HasColumnType("int");

                    b.Property<int>("ProdutosIdProduto")
                        .HasColumnType("int");

                    b.HasKey("LojasIdLoja", "ProdutosIdProduto");

                    b.HasIndex("ProdutosIdProduto");

                    b.ToTable("LojaProduto");
                });

            modelBuilder.Entity("PagamentoProduto", b =>
                {
                    b.Property<int>("PagamentosIdPagamento")
                        .HasColumnType("int");

                    b.Property<int>("ProdutosIdProduto")
                        .HasColumnType("int");

                    b.HasKey("PagamentosIdPagamento", "ProdutosIdProduto");

                    b.HasIndex("ProdutosIdProduto");

                    b.ToTable("PagamentoProduto");
                });

            modelBuilder.Entity("PorjetoEstudo.Dominio.Dominio.Endereco", b =>
                {
                    b.Property<int>("IdEndereco")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Bairro")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cep")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Cidade")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Estado")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Pessoa")
                        .HasColumnType("int");

                    b.Property<string>("Logradouro")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdEndereco");

                    b.HasIndex("Id_Pessoa")
                        .IsUnique();

                    b.ToTable("Enderecos");
                });

            modelBuilder.Entity("PorjetoEstudo.Dominio.Dominio.Loja", b =>
                {
                    b.Property<int>("IdLoja")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cnpj")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Pessoa")
                        .HasColumnType("int");

                    b.Property<string>("NomeLoja")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLoja");

                    b.HasIndex("Id_Pessoa")
                        .IsUnique();

                    b.ToTable("Lojas");
                });

            modelBuilder.Entity("PorjetoEstudo.Dominio.Dominio.Pagamento", b =>
                {
                    b.Property<int>("IdPagamento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("Preco")
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("Qtde")
                        .HasColumnType("int");

                    b.HasKey("IdPagamento");

                    b.ToTable("Pagamentos");
                });

            modelBuilder.Entity("PorjetoEstudo.Dominio.Dominio.Pessoa", b =>
                {
                    b.Property<int>("IdPessoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cpf")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmailPessoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomePessoa")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Telefone")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPessoa");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("PorjetoEstudo.Dominio.Dominio.Produto", b =>
                {
                    b.Property<int>("IdProduto")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeProduto")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdProduto");

                    b.ToTable("Produtos");
                });

            modelBuilder.Entity("LojaProduto", b =>
                {
                    b.HasOne("PorjetoEstudo.Dominio.Dominio.Loja", null)
                        .WithMany()
                        .HasForeignKey("LojasIdLoja")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PorjetoEstudo.Dominio.Dominio.Produto", null)
                        .WithMany()
                        .HasForeignKey("ProdutosIdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PagamentoProduto", b =>
                {
                    b.HasOne("PorjetoEstudo.Dominio.Dominio.Pagamento", null)
                        .WithMany()
                        .HasForeignKey("PagamentosIdPagamento")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PorjetoEstudo.Dominio.Dominio.Produto", null)
                        .WithMany()
                        .HasForeignKey("ProdutosIdProduto")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PorjetoEstudo.Dominio.Dominio.Endereco", b =>
                {
                    b.HasOne("PorjetoEstudo.Dominio.Dominio.Pessoa", "Pessoa")
                        .WithOne("Endereco")
                        .HasForeignKey("PorjetoEstudo.Dominio.Dominio.Endereco", "Id_Pessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("PorjetoEstudo.Dominio.Dominio.Loja", b =>
                {
                    b.HasOne("PorjetoEstudo.Dominio.Dominio.Pessoa", "Pessoa")
                        .WithOne("Loja")
                        .HasForeignKey("PorjetoEstudo.Dominio.Dominio.Loja", "Id_Pessoa")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Pessoa");
                });

            modelBuilder.Entity("PorjetoEstudo.Dominio.Dominio.Pessoa", b =>
                {
                    b.Navigation("Endereco");

                    b.Navigation("Loja");
                });
#pragma warning restore 612, 618
        }
    }
}
